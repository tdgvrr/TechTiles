#!/bin/bash

# 
# Script to restart the JMS services: JMSrestart [-t tenantID] ALL | service_name
# Where service_name is one or more of DB, CONTROL, LOGIN, LOGOFF, ACTION
#

shopt -s nocasematch

DoRestart () 
{
 if [ -f "/mnt/shared/latest/bin/JMSstop" ]; then
    /mnt/shared/latest/bin/JMSstop $1 | tee -a $LOG/$1.log | grep -v "WARNING: "
 else
    $FMA_DIR/bin/JMSstop $1 | tee -a $LOG/$1.log
 fi

 if [ -f "/mnt/shared/latest/bin/JMSstart" ]; then
    /mnt/shared/latest/bin/JMSstart $1 | tee -a $LOG/$1.log | grep -v "WARNING: "
 else
    $FMA_DIR/bin/JMSstart $1 | tee -a $LOG/$1.log
 fi
}

# Parse args for "-t" 

tid=
while getopts ht: name
do
    case $name in
    t) tid="$OPTARG";;
    ?) echo "Usage: $0: [-t tenantId] args" 
       exit 0;;
    esac
done

shift $(($OPTIND - 1))

# Must have install directory (default: /appliance)

if [ -z "$FMA_DIR" ]; then
   export FMA_DIR=/appliance
   if [ -f "/etc/TechTiles/Appliance" ]; then
      if [ ! -z `grep -i "Type=MULTI" /etc/TechTiles/Appliance` ]; then
         export ISMULTI=YES
         if [ -z "$tid" ]; then
            echo "Multi-tenant device - rerun with FMA_DIR set or use <-t tenant> parameter"
            exit 4
         fi
         export FMA_DIR=/secure/tenant.$tid
      fi
   fi
fi

if [ ! -f "$FMA_DIR/conf/sysvars" ]; then
   echo "Invalid configuration directory $FMA_DIR"
   exit 4
fi

. $FMA_DIR/conf/sysvars

export LOG=$FMA_DIR/logs

# Figure out what we're starting

if [ $# -eq 0 ]; then 
   LOGIN=yes
   LOGOFF=yes
   DB=yes
   CONTROL=yes
   ACTION=yes
else
   LOGIN=no
   LOGOFF=no
   DB=no
   CONTROL=no
   ACTION=no
fi

for I in $@
do
   i=`echo $I | tr '[:upper:]' '[:lower:]'`
   if [ "$i" == "all" ]; then
      LOGIN=yes
      LOGOFF=yes
      DB=yes
      CONTROL=yes
      ACTION=yes
   fi
   if [ "$i" == "login" ]; then
      LOGIN=yes
   fi
   if [ "$i" == "logoff" ]; then
      LOGOFF=yes
   fi
   if [ "$i" == "db" ]; then
      DB=yes
   fi
   if [ "$i" == "control" ]; then
      CONTROL=yes
   fi
   if [ "$i" == "action" ]; then
      ACTION=yes
   fi
done

# Now do it

if [ "$LOGIN" == "yes" ] && [ -f "$FMA_DIR/jms/Login.groovy" ]; then 
   DoRestart "Login" 
fi 

if [ "$LOGOFF" == "yes" ] && [ -f "$FMA_DIR/jms/Logoff.groovy" ]; then 
   DoRestart "Logoff" 
fi 

if [ "$DB" == "yes" ] && [ -f "$FMA_DIR/jms/DB.groovy" ]; then 
   DoRestart "DB" 
fi
 
if [ "$CONTROL" == "yes" ] && [ -f "$FMA_DIR/jms/Control.groovy" ]; then 
   DoRestart "Control" 
fi
 
if [ "$ACTION" == "yes" ] && [ -f "$FMA_DIR/jms/Action.groovy" ]; then 
   DoRestart "Action" 
fi 

exit 0
